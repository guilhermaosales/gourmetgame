/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gourmetgame;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

public class App {

    private final static String TITLE_MESSAGE = "Jogo Gourmet";
    private final static String CONFIRM_MESSAGE = "Confirm";
    private final static String COMPLETION_MESSAGE = "Complete";
    private final static String GIVEUP_MESSAGE = "Desisto";
    
    BinaryTree binaryTree;
    boolean infiniteLoop = true;

    public App() {
        binaryTree = new BinaryTree();
    }

    public static void main(String[] args) {
        new App().runApp();
    }

    private void initialize() {
        binaryTree.insertInto(null, "Massa", true);
        binaryTree.insertInto(binaryTree.root, "Lasanha", true);
        binaryTree.insertInto(binaryTree.root, "Bolo de chocolate", false);
    }

    public void runApp() {
        if (binaryTree.hasNodeEmpty()) {
            initialize();
        }
        
        int initialDialog = showInitialScreen();

        if (initialDialog == JOptionPane.CLOSED_OPTION) {
            infiniteLoop = false;
        }

        while (infiniteLoop) {
            dishQuestion(binaryTree.root);
        }
    }

    private int showInitialScreen() {
        Object[] options = { "OK" };
        JLabel dishYouLike = new JLabel("Pense em um prato que gosta");
        dishYouLike.setHorizontalAlignment(SwingConstants.CENTER);

        return JOptionPane.showOptionDialog(null, dishYouLike, TITLE_MESSAGE, JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);

    }

    public void dishQuestion(Node node) {
        String question = "O prato que você pensou é " + node.getValue() + "?";
        int answer = JOptionPane.showConfirmDialog(null, question, CONFIRM_MESSAGE, JOptionPane.YES_NO_OPTION);

        if (answer == JOptionPane.OK_OPTION) {
            if (node.isLeaf()) {
                robotWon();
            } else {
                dishQuestion(node.getRightSon());
            }
        } else {
            if (node.getRightSon() == null) {
                askInformationAboutDishQuestion(node);
                runApp();
            } else {
                dishQuestion(node.getLeftSon());
            }
        }
    }

    private void robotWon() {
        JOptionPane.showMessageDialog(null, "Acertei de novo!");
        runApp();
    }

    private void askInformationAboutDishQuestion(Node node) {
        String answer = JOptionPane.showInputDialog(null, "Qual prato você pensou?", GIVEUP_MESSAGE, JOptionPane.QUESTION_MESSAGE);
        String tip = JOptionPane.showInputDialog(null, answer + " é _________ mas " + node.getValue() + " não.", COMPLETION_MESSAGE, JOptionPane.QUESTION_MESSAGE);

        changeNodeToTipReceived(node, tip, answer);
    }

    private void changeNodeToTipReceived(Node node, String tip, String answer) {
        String wrongGuess = node.getValue();
        node.setValue(tip);
        node.setLeftSon(new Node(wrongGuess));
        node.setRightSon(new Node(answer));
    }
}
